name: PR Testing

on:
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black mypy

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Check formatting with black
      run: black --check .

    - name: Type check with mypy
      run: mypy .

    - name: Run tests
      run: |
        pytest tests/* \
        --doctest-modules \
        --junitxml=junit/test-results-${{ matrix.python-version }}.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml

      if: ${{ always() }}

  # Optional: Codecov coverage reporting (uncomment and configure if you use coverage)
  # coverage:
  #   needs: lint-and-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.10'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #         pip install pytest-cov
  #     - name: Run coverage
  #       run: |
  #         pytest --cov=./ --cov-report=xml
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v4
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}